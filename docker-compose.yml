services:
  gateway:
    build: services/nginx
    container_name: theatre-gateway
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api

  api:
    build: services/api
    container_name: theatre-api
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: theatre-db
      POSTGRES_PORT: 5432

      ES_HOST: elasticsearch
      ES_PORT: 9200

      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      theatre-db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy

  etl:
    build: services/etl
    container_name: etl-service
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: theatre-db
      POSTGRES_PORT: 5432

      REDIS_HOST: redis
      REDIS_PORT: 6379

      ES_URL: http://elasticsearch:9200
    depends_on:
      theatre-db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  theatre-db:
    image: postgres:14
    container_name: theatre-db
    restart: always
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:8.0
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  elasticsearch:
    image: elasticsearch:8.6.2
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    environment:
      discovery.type: single-node
      xpack.security.enabled: false

